from collections import defaultdict


def count_cross_tribe_pairs(edges):
    parent = {}

    def find(x):
        if parent.setdefault(x, x) != x:
            parent[x] = find(parent[x])
        return parent[x]

    def union(x, y):
        parent[find(x)] = find(y)

    for u, v in edges:
        union(u, v)

    tribes = defaultdict(set)
    for person in parent:
        root = find(person)
        tribes[root].add(person)

    tribe_stats = []
    for members in tribes.values():
        boys = sum(1 for x in members if x % 2 == 1)
        girls = sum(1 for x in members if x % 2 == 0)
        tribe_stats.append((boys, girls))

    total_boys = sum(b for b, _ in tribe_stats)
    total_girls = sum(g for _, g in tribe_stats)

    total_pairs = 0
    for boys, girls in tribe_stats:
        other_boys = total_boys - boys
        other_girls = total_girls - girls
        total_pairs += boys * other_girls + girls * other_boys

    return total_pairs // 2
